#include <iostream>
#include<ctime>
#include <string>

#define PI 3.14
using namespace std;

//*-pointer - можеит ссылаться на NULL
//& - reference должна ,быть инициализирована
// адрес можно поместить в ссылку int &aref = *pa;

// если передаем в функцию указатель, внутри функции нужно разименовать его, при обращении с ним, при выведении значения нужно взять его адрес
// если передаем через ссылку, то дополнительного синтаксиса при работе со значением на надо.
// при указании ссылки на указатель, сама ссылка тоже имеет адрес в памяти, который можно поместить в другой указатель

//int argc, char* argv[] - нужны для того что бы что то сообщить программе, что бы ей что-то сообщить в момент запуска
// argc - argumtns count - сколько различных параметров мы передали(пример название програамы и адрес сайта)
// argv - arguments values - массив - который содержит описание тех команд которые мы передали (адрес, программу)

// инкапсуляция - принцип независимости данных (любой программист может скрыть часть свойств от другого пользователя и оставив ему только часть с использованием)
//Наследование - процесс с помощью которого один объект может наследовать свойства другого и дополнятьего своим каким-то функционалом

class Image {
public:


private:

    class Pixel
    {
    private:
        int r;
        int g;
        int b;
    public:
        Pixel(int r, int g, int b) {
            this-> r = r;
            this-> g = g;
            this-> b = b;
        }
        string GetInfo(){
            return "Pixel: r = "+to_string(r) + " g = "+ to_string(g) + "b = " + to_string(b);
        }
    };

    Pixel pixels[5]{
        Pixel(0,0,0),
        Pixel(0,0,0),
        Pixel(0,0,0),
        Pixel(0,0,0),
        Pixel(0,0,0)

    };
};




int main(){

    
    
    return 0;

}


//expr: " APPLY_LAMBDA "                                                                                                                                                               │······················
//Stack: ((2 3) (lambda (x y) (* x y))) 
